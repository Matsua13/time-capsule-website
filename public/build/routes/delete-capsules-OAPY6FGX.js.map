{
  "version": 3,
  "sources": ["../../../app/routes/delete-capsules.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/delete-capsules.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/delete-capsules.tsx\");\n  import.meta.hot.lastModified = \"1740084013573.8438\";\n}\n// REMIX HMR END\n\n// app/routes/delete-capsules.tsx\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, Link } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { requireUser } from \"~/utils/auth.server\";\n// Loader pour r\u00E9cup\u00E9rer la liste des capsules de l'utilisateur connect\u00E9\nexport const loader = async ({\n  request\n}) => {\n  const user = await requireUser(request);\n  const capsules = await db.capsule.findMany({\n    where: {\n      ownerId: user.id\n    },\n    select: {\n      id: true,\n      title: true\n    }\n  });\n  return json({\n    capsules\n  });\n};\n\n// Action pour supprimer une capsule\nexport const action = async ({\n  request\n}) => {\n  const user = await requireUser(request);\n  const formData = await request.formData();\n  const capsuleId = formData.get(\"capsuleId\");\n  if (typeof capsuleId !== \"string\") {\n    return json({\n      error: \"Invalid capsule ID\"\n    }, {\n      status: 400\n    });\n  }\n\n  // V\u00E9rifie que la capsule existe et appartient \u00E0 l'utilisateur connect\u00E9\n  const capsule = await db.capsule.findUnique({\n    where: {\n      id: parseInt(capsuleId)\n    },\n    select: {\n      ownerId: true\n    }\n  });\n  if (!capsule || capsule.ownerId !== user.id) {\n    return json({\n      error: \"Capsule not found or unauthorized\"\n    }, {\n      status: 404\n    });\n  }\n\n  // Supprimer les m\u00E9dias associ\u00E9s \u00E0 cette capsule\n  await db.media.deleteMany({\n    where: {\n      capsuleId: parseInt(capsuleId)\n    }\n  });\n\n  // Supprimer la capsule\n  await db.capsule.delete({\n    where: {\n      id: parseInt(capsuleId)\n    }\n  });\n  return redirect(\"/delete-capsules\");\n};\nexport default function DeleteCapsules() {\n  _s();\n  const {\n    capsules\n  } = useLoaderData();\n  return <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-sky-400 to-sky-600 p-4\">\n      <div className=\"w-full max-w-md bg-yellow-200 p-8 rounded-3xl shadow-xl border-4 border-yellow-500\">\n        <h1 className=\"text-4xl font-extrabold text-white mb-6 drop-shadow-lg text-center\">\n          Manage Your Capsules\n        </h1>\n        {capsules.length === 0 ? <p className=\"text-center text-lg\">No capsules found.</p> : <ul className=\"space-y-4\">\n            {capsules.map(capsule => <li key={capsule.id} className=\"flex justify-between items-center p-4 bg-white rounded shadow hover:bg-gray-100 transition\">\n                <span className=\"text-xl font-medium\">{capsule.title}</span>\n                <Form method=\"post\" onSubmit={e => {\n            if (!window.confirm(\"Are you sure you want to delete this capsule?\")) {\n              e.preventDefault();\n            }\n          }}>\n                  <input type=\"hidden\" name=\"capsuleId\" value={capsule.id} />\n                  <button type=\"submit\">\n                    \uD83D\uDDD1\uFE0F\n                  </button>\n                </Form>\n              </li>)}\n          </ul>}\n        <div className=\"mt-6 text-center\">\n          <Link to=\"/dashboard\" className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-4 rounded-full shadow-xl transform hover:scale-105 transition\">\n            Back to Dashboard\n          </Link>\n        </div>\n      </div>\n    </div>;\n}\n_s(DeleteCapsules, \"+Wm3neYxqmaSnK2GCF0yfvlICdU=\", false, function () {\n  return [useLoaderData];\n});\n_c = DeleteCapsules;\nvar _c;\n$RefreshReg$(_c, \"DeleteCapsules\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAE/B,gBAAmB;AACnB,kBAA4B;AA0EpB;AAlGR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AA0Ee,SAAR,iBAAkC;AACvC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,wGAClB,6DAAC,SAAI,WAAU,sFACb;AAAA,uDAAC,QAAG,WAAU,sEAAqE,oCAAnF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACC,SAAS,WAAW,IAAI,mDAAC,OAAE,WAAU,uBAAsB,kCAAnC;AAAA;AAAA;AAAA;AAAA,WAAqD,IAAO,mDAAC,QAAG,WAAU,aAC9F,mBAAS,IAAI,aAAW,mDAAC,QAAoB,WAAU,8FACpD;AAAA,yDAAC,UAAK,WAAU,uBAAuB,kBAAQ,SAA/C;AAAA;AAAA;AAAA;AAAA,aAAqD;AAAA,MACrD,mDAAC,QAAK,QAAO,QAAO,UAAU,OAAK;AACvC,YAAI,CAAC,OAAO,QAAQ,+CAA+C,GAAG;AACpE,YAAE,eAAe;AAAA,QACnB;AAAA,MACF,GACQ;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,aAAY,OAAO,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA,eAAyD;AAAA,QACzD,mDAAC,YAAO,MAAK,UAAS,+BAAtB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,SAX8B,QAAQ,IAAjB;AAAA;AAAA;AAAA;AAAA,WAYvB,CAAK,KAb0E;AAAA;AAAA;AAAA;AAAA,WAcnF;AAAA,IACF,mDAAC,SAAI,WAAU,oBACb,6DAAC,QAAK,IAAG,cAAa,WAAU,iIAAgI,iCAAhK;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAvBF;AAAA;AAAA;AAAA;AAAA,SAwBA,KAzBG;AAAA;AAAA;AAAA;AAAA,SA0BL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
