{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.tsx", "../../../app/components/Timeline.tsx", "../../../app/components/CalendarView.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.tsx\");\n  import.meta.hot.lastModified = \"1740083204904.0317\";\n}\n// REMIX HMR END\n\n/* eslint-disable import/no-duplicates */\n// app/routes/dashboard.tsx\nimport { Link, Form, useLoaderData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { db } from \"~/utils/db.server\";\nimport { requireUser } from \"~/utils/auth.server\";\nimport Timeline from \"~/components/Timeline\";\nimport CalendarView from \"~/components/CalendarView\";\nimport { useState, useEffect } from \"react\";\n// Loader pour r\u00E9cup\u00E9rer les donn\u00E9es du dashboard\nexport const loader = async ({\n  request\n}) => {\n  const user = await requireUser(request);\n  const capsules = await db.capsule.findMany({\n    where: {\n      OR: [{\n        ownerId: user.id\n      }, {\n        visibility: \"group\",\n        ownerId: {\n          not: user.id\n        },\n        OR: [{\n          recipientType: \"email\",\n          groupRecipient: user.email\n        }, {\n          recipientType: \"username\",\n          groupRecipient: user.username\n        }]\n      }]\n    }\n  });\n  const capsulesTransformed = capsules.map(c => ({\n    ...c,\n    scheduledDate: c.scheduledDate.toISOString()\n  }));\n  const notifications = await db.notification.findMany({\n    where: {\n      userId: user.id,\n      read: false\n    },\n    orderBy: {\n      createdAt: \"desc\"\n    }\n  });\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  tomorrow.setHours(0, 0, 0, 0);\n  const dayAfterTomorrow = new Date(tomorrow);\n  dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 1);\n  const reminders = capsulesTransformed.filter(c => {\n    const capsuleDate = new Date(c.scheduledDate);\n    return capsuleDate >= tomorrow && capsuleDate < dayAfterTomorrow && c.ownerId !== user.id;\n  }).map(c => {\n    const openingTime = new Date(c.scheduledDate).toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n    return {\n      id: c.id,\n      message: `Hey there, don't forget to open your magical capsule tomorrow at ${openingTime}`\n    };\n  });\n  return json({\n    capsules: capsulesTransformed,\n    user,\n    notifications,\n    reminders\n  });\n};\n\n// Action pour g\u00E9rer la suppression d'une capsule depuis le Dashboard\nexport const action = async ({\n  request\n}) => {\n  const user = await requireUser(request);\n  const formData = await request.formData();\n  const deleteId = formData.get(\"deleteCapsuleId\");\n  if (typeof deleteId !== \"string\") {\n    return json({\n      error: \"Invalid capsule ID\"\n    }, {\n      status: 400\n    });\n  }\n\n  // V\u00E9rifie que la capsule existe et appartient \u00E0 l'utilisateur\n  const capsule = await db.capsule.findUnique({\n    where: {\n      id: parseInt(deleteId)\n    },\n    select: {\n      ownerId: true\n    }\n  });\n  if (!capsule || capsule.ownerId !== user.id) {\n    return json({\n      error: \"Capsule not found or unauthorized\"\n    }, {\n      status: 404\n    });\n  }\n\n  // Supprime d'abord les m\u00E9dias associ\u00E9s\n  await db.media.deleteMany({\n    where: {\n      capsuleId: parseInt(deleteId)\n    }\n  });\n  // Puis supprime la capsule\n  await db.capsule.delete({\n    where: {\n      id: parseInt(deleteId)\n    }\n  });\n  return redirect(\"/dashboard\");\n};\nexport default function Dashboard() {\n  _s();\n  const {\n    capsules,\n    user,\n    notifications,\n    reminders\n  } = useLoaderData();\n  const [filter, setFilter] = useState(\"all\");\n  const [localReminders, setLocalReminders] = useState(reminders);\n\n  // Retirer les rappels apr\u00E8s 1 minute\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLocalReminders([]);\n    }, 60000);\n    return () => clearTimeout(timer);\n  }, []);\n  let filteredCapsules = capsules;\n  if (filter === \"sent\") {\n    filteredCapsules = capsules.filter(c => c.ownerId === user.id);\n  } else if (filter === \"received\") {\n    filteredCapsules = capsules.filter(c => c.ownerId !== user.id);\n  }\n  const now = new Date();\n  const upcomingCapsules = filteredCapsules.filter(c => new Date(c.scheduledDate) >= now);\n  const pastCapsules = filteredCapsules.filter(c => new Date(c.scheduledDate) < now);\n  return <div className=\"min-h-screen p-4 bg-gradient-to-br from-sky-300 to-sky-500 text-gray-900\">\n      {/* Rappels */}\n      {localReminders.length > 0 && <div className=\"mb-6 p-4 bg-emerald-100 text-emerald-800 rounded\">\n          {localReminders.map(reminder => <p key={reminder.id} className=\"text-sm\">{reminder.message}</p>)}\n        </div>}\n\n      {/* Notifications */}\n      {notifications.length > 0 && <div className=\"mb-6 p-4 bg-amber-100 text-amber-800 rounded\">\n          {notifications.map(notif => {\n        const match = notif.message.match(/^capsule:(\\d+):\\s*(.*)/);\n        if (match) {\n          const capsuleId = match[1];\n          const displayMessage = match[2];\n          return <p key={notif.id} className=\"text-sm\">\n                  <a href={`/notification?capsuleId=${capsuleId}&notifId=${notif.id}`} className=\"hover:underline\">\n                    {displayMessage}\n                  </a>\n                </p>;\n        } else {\n          return <p key={notif.id} className=\"text-sm\">{notif.message}</p>;\n        }\n      })}\n        </div>}\n\n      {/* Ent\u00EAte du Dashboard */}\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-5xl font-extrabold drop-shadow-xl\">Dashboard</h1>\n        <Form method=\"post\" action=\"/logout\">\n          <button type=\"submit\" className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition\">\n            Log out\n          </button>\n        </Form>\n      </div>\n\n      {/* Bouton de cr\u00E9ation de capsule */}\n      <section className=\"flex justify-center mb-8\">\n        <Link to=\"/new\" className=\"bg-amber-300 hover:bg-amber-500 text-white px-6 py-3 rounded transition\">\n          Create a Capsule\n        </Link>\n      </section>\n\n      {/* Contr\u00F4le de filtrage */}\n      <div className=\"mb-6 flex space-x-4\">\n        <button onClick={() => setFilter(\"all\")} className={`px-4 py-2 rounded transition ${filter === \"all\" ? \"bg-sky-700 text-white\" : \"bg-gray-200 text-gray-800\"}`}>\n          All Capsules\n        </button>\n        <button onClick={() => setFilter(\"sent\")} className={`px-4 py-2 rounded transition ${filter === \"sent\" ? \"bg-sky-700 text-white\" : \"bg-gray-200 text-gray-800\"}`}>\n          Sent\n        </button>\n        <button onClick={() => setFilter(\"received\")} className={`px-4 py-2 rounded transition ${filter === \"received\" ? \"bg-sky-700 text-white\" : \"bg-gray-200 text-gray-800\"}`}>\n          Received\n        </button>\n      </div>\n\n      {/* Section Capsules \u00E0 venir avec bouton poubelle redirigeant vers /delete-capsules */}\n      <section className=\"mb-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Upcoming Capsules</h2>\n        {upcomingCapsules.length ? <div className=\"grid gap-4\">\n            {upcomingCapsules.map(capsule => <div key={capsule.id} className=\"flex justify-between items-center p-4 bg-white rounded shadow hover:bg-gray-100 transition\">\n                <div>\n                  <h3 className=\"text-xl font-semibold\">\n                    <Link to={`/${capsule.id}`} className=\"text-sky-700 hover:underline\">\n                      {capsule.title}\n                    </Link>\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">{capsule.content}</p>\n                  <p className=\"text-xs text-gray-500\">\n                    Opening day: {new Date(capsule.scheduledDate).toLocaleString()}\n                  </p>\n                </div>\n                {/* Lien avec l'emoji poubelle pour rediriger vers /delete-capsules */}\n                <Link to=\"/delete-capsules\" className=\"ml-4 text-red-600 hover:text-red-800\" title=\"Manage capsule deletions\">\n                  \uD83D\uDDD1\uFE0F\n                </Link>\n              </div>)}\n          </div> : <p>No upcoming capsules.</p>}\n      </section>\n\n      {/* Section Capsules pass\u00E9es avec bouton poubelle */}\n      <section className=\"mb-8\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Previous Capsules</h2>\n        {pastCapsules.length ? <div className=\"grid gap-4\">\n            {pastCapsules.map(capsule => <div key={capsule.id} className=\"flex justify-between items-center p-4 bg-white rounded shadow hover:bg-gray-100 transition\">\n                <div>\n                  <h3 className=\"text-xl font-semibold\">\n                    <Link to={`/${capsule.id}`} className=\"text-sky-700 hover:underline\">\n                      {capsule.title}\n                    </Link>\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">{capsule.content}</p>\n                  <p className=\"text-xs text-gray-500\">\n                    Opening day: {new Date(capsule.scheduledDate).toLocaleString()}\n                  </p>\n                </div>\n                <Link to=\"/delete-capsules\" className=\"ml-4 text-red-600 hover:text-red-800\" title=\"Manage capsule deletions\">\n                  \uD83D\uDDD1\uFE0F\n                </Link>\n              </div>)}\n          </div> : <p>No previous capsules.</p>}\n      </section>\n\n      {/* Section Visualisations */}\n      <section className=\"mb-8\">\n        <h2 className=\"text-center text-2xl font-semibold mb-4\">Visualisations</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div className=\"bg-white p-8 rounded-3xl shadow-xl border-4 border-yellow-500\">\n            <h3 className=\"text-xl font-semibold mb-2\">Timeline</h3>\n            <Timeline capsules={capsules} />\n          </div>\n          <div className=\"bg-white p-8 rounded-3xl shadow-xl border-4 border-yellow-500\">\n            <h3 className=\"text-xl font-semibold mb-2\">Calendar</h3>\n            <CalendarView capsules={capsules} />\n          </div>\n        </div>\n      </section>\n    </div>;\n}\n_s(Dashboard, \"GwiGptDDsD2739Md0/ltsiqL/fg=\", false, function () {\n  return [useLoaderData];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Timeline.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Timeline.tsx\");\n  import.meta.hot.lastModified = \"1740075741497.3647\";\n}\n// REMIX HMR END\n\n// app/components/Timeline.tsx\nimport React from \"react\";\nconst Timeline = ({\n  capsules\n}) => {\n  // Trie les capsules par date croissante\n  const sortedCapsules = [...capsules].sort((a, b) => new Date(b.scheduledDate).getTime() - new Date(a.scheduledDate).getTime());\n  return <div>\n      <ul style={{\n      listStyle: \"none\",\n      paddingLeft: 0\n    }}>\n        {sortedCapsules.map(capsule => <li key={capsule.id} style={{\n        marginBottom: \"20px\",\n        position: \"relative\"\n      }}>\n            <div style={{\n          borderLeft: \"2px solid #333\",\n          paddingLeft: \"15px\"\n        }}>\n              <h4>{capsule.title}</h4>\n              <p>{new Date(capsule.scheduledDate).toLocaleString()}</p>\n            </div>\n          </li>)}\n      </ul>\n    </div>;\n};\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/CalendarView.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/CalendarView.tsx\");\n  import.meta.hot.lastModified = \"1740075721267.8442\";\n}\n// REMIX HMR END\n\n// app/components/CalendarView.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React from \"react\";\nexport default function CalendarView({\n  capsules\n}) {\n  // Utilisation du temps UTC pour garantir un rendu stable\n  const now = new Date();\n  const year = now.getUTCFullYear();\n  const month = now.getUTCMonth(); // 0-index\u00E9\n  const currentDay = now.getUTCDate();\n  const monthName = now.toLocaleString(\"default\", {\n    month: \"long\"\n  });\n\n  // Nombre de jours dans le mois courant\n  const daysInMonth = new Date(year, month + 1, 0).getUTCDate();\n\n  // R\u00E9cup\u00E9rer les jours o\u00F9 des capsules sont programm\u00E9es en for\u00E7ant l\u2019UTC\n  const capsuleDays = capsules.map(capsule => {\n    const date = new Date(capsule.scheduledDate);\n    if (date.getUTCFullYear() === year && date.getUTCMonth() === month) {\n      return date.getUTCDate();\n    }\n    return null;\n  }).filter(day => day !== null);\n\n  // Calculer le jour de la semaine du 1er du mois en UTC\n  const firstDayOfWeek = new Date(Date.UTC(year, month, 1)).getUTCDay();\n\n  // Pr\u00E9parer les cellules du calendrier\n  const calendarCells = [];\n  for (let i = 0; i < firstDayOfWeek; i++) {\n    calendarCells.push(null);\n  }\n  for (let day = 1; day <= daysInMonth; day++) {\n    calendarCells.push(day);\n  }\n  return <div className=\"p-4 bg-white rounded-3xl shadow-xl border-4 border-slate-300\">\n      <h3 className=\"text-xl font-semibold mb-2 text-center\">\n        {monthName} {year}\n      </h3>\n      <div className=\"grid grid-cols-7 gap-2 text-center\">\n        {/* En-t\u00EAte des jours de la semaine */}\n        {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map(dayName => <div key={dayName} className=\"font-bold\">\n            {dayName}\n          </div>)}\n        {calendarCells.map((cell, index) => <div key={index} className=\"h-12 flex items-center justify-center border border-gray-200 rounded\">\n            {cell ? <div className={`${cell === currentDay ? \"bg-green-200 font-bold rounded-full px-1\" : \"\"}`}>\n                <span>{cell}</span>\n                {capsuleDays.includes(cell) && <span className=\"ml-1\" title=\"Capsule scheduled\">\n                    \uD83D\uDC8A\n                  </span>}\n              </div> : null}\n          </div>)}\n      </div>\n    </div>;\n}\n_c = CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_react", "import_jsx_dev_runtime", "_c"]
}
