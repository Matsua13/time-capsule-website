{
  "version": 3,
  "sources": ["../../../app/routes/notification.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/notification.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/notification.tsx\");\n  import.meta.hot.lastModified = \"1740079186871.8975\";\n}\n// REMIX HMR END\n\n// app/routes/notification.tsx\n\nimport { redirect } from \"@remix-run/node\";\nimport { db } from \"~/utils/db.server\";\nimport { requireUser } from \"~/utils/auth.server\";\nexport const loader = async ({\n  request\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = await requireUser(request);\n  const url = new URL(request.url);\n  const capsuleId = url.searchParams.get(\"capsuleId\");\n  const notifId = url.searchParams.get(\"notifId\");\n\n  // Mettre \u00E0 jour la notification pour la marquer comme lue\n  if (notifId) {\n    await db.notification.update({\n      where: {\n        id: parseInt(notifId)\n      },\n      data: {\n        read: true\n      }\n    });\n  }\n\n  // Rediriger vers la capsule si un capsuleId est fourni, sinon vers le dashboard\n  if (capsuleId) {\n    return redirect(`/${capsuleId}`);\n  }\n  return redirect(\"/dashboard\");\n};\nexport default function NotificationRedirect() {\n  return null;\n}\n_c = NotificationRedirect;\nvar _c;\n$RefreshReg$(_c, \"NotificationRedirect\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAsBA,kBAAyB;AACzB,gBAAmB;AACnB,kBAA4B;AAvB5B,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AAmCe,SAAR,uBAAwC;AAC7C,SAAO;AACT;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,sBAAsB;AAEvC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
